name: MLOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Étape 1111 : Entraînement du modèle avec MLflow
  train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run training with MLflow
        run: |
          python model_pipeline.py

      # Sauvegarder les logs MLflow comme artefact
      - name: Upload MLflow logs
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-logs
          path: ./mlruns

  # Étape 2 : Tests unitaires et API
  test:
    runs-on: ubuntu-latest
    needs: train
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      - name: Run unit tests
        run: |
          pytest tests/ --verbose
        continue-on-error: true # Ignore si tests/ n'existe pas

      - name: Start FastAPI server in background
        run: |
          uvicorn app:app --host 0.0.0.0 --port 8000 &
          sleep 5 # Attendre que le serveur démarre

      - name: Test API endpoint
        run: |
          curl -X POST "http://localhost:8000/predict" -H "Content-Type: application/json" -d '{"data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}' || echo "Predict endpoint test failed"

  # Étape 3 : Déploiement des fichiers statiques et de l'application
  deploy:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write  # Ajouter cette ligne pour autoriser l'écriture
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Déploiement des fichiers statiques (index.html)
      - name: Deploy static files to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./statics

      # Construction et déploiement de l'image Docker FastAPI
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rayen_nom_4ds10_mlops:latest

      # Vérification du conteneur déployé
      - name: Test deployed container
        run: |
          docker run -d -p 8000:8000 ${{ secrets.DOCKERHUB_USERNAME }}/rayen_nom_4ds10_mlops:latest
          sleep 5
          curl http://localhost:8000/docs || echo "Deployment test failed"
